/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.eshark.dctm.gui;

import java.util.Map;
import java.util.Properties;
import java.util.Vector;
import org.jdesktop.application.Action;
import org.jdesktop.application.Task;
import org.eshark.dctm.MainApplication;
import org.eshark.dctm.gui.model.BasicTableModel;
import org.eshark.dctm.task.ExportTableTask;
import static org.eshark.dctm.gui.MainMDIView.SYS_PROP_VIEW;

/**
 * <TABLE BORDER="1" WIDTH="100%">
 * <TR>
 * <TH>Perticulars</TH><TH>::</TH><TH>Details</TH>
 * </TR>
 * <TR>
 * <TD>Project Name</TD><TD>::</TD><TD>Query Builder D-SIX</TD>
 * </TR>
 * <TR>
 * <TD>File Name</TD><TD>::</TD><TD>SystemPropertyView.java</TD>
 * </TR>
 * <TR>
 * <TD>Created on</TD><TD>::</TD><TD>Sep 22, 2008 11:36:35 AM</TD>
 * </TR>
 * <TR>
 * <TD>@author</TD><TD>::</TD><TD><a href="mailto:subhasish@gmail.com">Subhasish Chattopadhyay</a></TD>
 * </TR>
 * <TR>
 * <TD>Purpose</TD><TD>::</TD><TD></TD>
 * </TR>
 * <TR>
 * <TD COLSPAN=3></TD>
 * </TR>
 * </TABLE>
 *
 * <TABLE BORDER="1" WIDTH="100%">
 * <CAPTION>File Change History</CAPTION>
 * <TR>
 * <TH>Date</TH><TH>Description</TH>                    |
 * </TR>
 * <TR>
 * <TD>Sep 22, 2008</TD><TD>Created</TD>
 * </TR>
 * </TABLE>
 */
@SuppressWarnings("unchecked")
public class SystemPropertyView extends javax.swing.JInternalFrame
{
	private static final long	serialVersionUID	= 6248100841476204637L;

	/** Creates new form SystemPropertyView */
	public SystemPropertyView() throws Exception
	{
		String[] lColumnNames =
		{ "KEY", "VALUE" };
		Vector<Object[]> lRowsProp = new Vector<Object[]>();
		Vector<Object[]> lRowsEnv = new Vector<Object[]>();
		//SETTING THE SYSTEM PROPERTIES
		//System.out.println("---------------------------------------------------");
		//System.out.println("SETTING THE SYSTEM PROPERTIES");
		Properties lProperties = System.getProperties();
		for (Map.Entry lEntry : lProperties.entrySet())
		{
			lRowsProp.add(new Object[]
			{ lEntry.getKey() + "", lEntry.getValue() + "" });
			//System.out.println("KEY " + lEntry.getKey() + " VALUE " +lEntry.getValue());
		}

		propTableModel = new BasicTableModel(lColumnNames, lRowsProp);
		//System.out.println("---------------------------------------------------");
		//System.out.println("---------------------------------------------------");
		//SETTING THE SYSTEM ENVIRONMENTS
		//System.out.println("SETTING THE SYSTEM ENVIRONMENTS");
		Map<String, String> lMap = System.getenv();
		for (Map.Entry lEntry : lMap.entrySet())
		{
			lRowsEnv.add(new Object[]
			{ lEntry.getKey() + "", lEntry.getValue() + "" });
			//System.out.println("KEY " + lEntry.getKey() + " VALUE " +lEntry.getValue());
		}
		envTableModel = new BasicTableModel(lColumnNames, lRowsEnv);
		//System.out.println("---------------------------------------------------");
		initComponents();
		//SET THE MODELS
		propTable.setModel(propTableModel);
		envTable.setModel(envTableModel);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents()
	{

		jPanel1 = new javax.swing.JPanel();
		propEnvTabbedPane = new javax.swing.JTabbedPane();
		systemPropPanel = new javax.swing.JPanel();
		propScrollPane = new javax.swing.JScrollPane();
		propTable = new javax.swing.JTable();
		systemEnvPanel = new javax.swing.JPanel();
		envScrollPane = new javax.swing.JScrollPane();
		envTable = new javax.swing.JTable();
		jPanel2 = new javax.swing.JPanel();
		exportButton = new javax.swing.JButton();

		jPanel1.setName("jPanel1"); // NOI18N

		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setResizable(true);
		org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(
				org.eshark.dctm.MainApplication.class).getContext().getResourceMap(SystemPropertyView.class);
		setTitle(resourceMap.getString("Form.title")); // NOI18N
		setDoubleBuffered(true);
		setName("Form"); // NOI18N
		addInternalFrameListener(new javax.swing.event.InternalFrameListener()
		{
			public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt)
			{
			}

			public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt)
			{
			}

			public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt)
			{
				frameClosing(evt);
			}

			public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt)
			{
			}

			public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt)
			{
			}

			public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt)
			{
			}

			public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt)
			{
			}
		});

		propEnvTabbedPane.setName("propEnvTabbedPane"); // NOI18N

		systemPropPanel.setName("systemPropPanel"); // NOI18N
		systemPropPanel.setLayout(new java.awt.BorderLayout());

		propScrollPane.setName("propScrollPane"); // NOI18N

		propTable.setName("propTable"); // NOI18N
		propScrollPane.setViewportView(propTable);

		systemPropPanel.add(propScrollPane, java.awt.BorderLayout.CENTER);

		propEnvTabbedPane.addTab(resourceMap.getString("systemPropPanel.TabConstraints.tabTitle"), systemPropPanel); // NOI18N

		systemEnvPanel.setName("systemEnvPanel"); // NOI18N
		systemEnvPanel.setLayout(new java.awt.BorderLayout());

		envScrollPane.setName("envScrollPane"); // NOI18N

		envTable.setName("envTable"); // NOI18N
		envScrollPane.setViewportView(envTable);

		systemEnvPanel.add(envScrollPane, java.awt.BorderLayout.CENTER);

		propEnvTabbedPane.addTab(resourceMap.getString("systemEnvPanel.TabConstraints.tabTitle"), systemEnvPanel); // NOI18N

		getContentPane().add(propEnvTabbedPane, java.awt.BorderLayout.CENTER);

		jPanel2.setName("jPanel2"); // NOI18N
		jPanel2.setLayout(new java.awt.BorderLayout());

		javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(
				org.eshark.dctm.MainApplication.class).getContext().getActionMap(SystemPropertyView.class, this);
		exportButton.setAction(actionMap.get("exportTable")); // NOI18N
		exportButton.setMnemonic('E');
		exportButton.setText(resourceMap.getString("exportButton.text")); // NOI18N
		exportButton.setName("exportButton"); // NOI18N
		jPanel2.add(exportButton, java.awt.BorderLayout.EAST);

		getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void frameClosing(javax.swing.event.InternalFrameEvent evt)
	{//GEN-FIRST:event_frameClosing
		SYS_PROP_VIEW = null;
	}//GEN-LAST:event_frameClosing

	@Action
	public Task exportTable()
	{
		if (propEnvTabbedPane.getSelectedIndex() == 0)
			return new ExportTableTask(MainApplication.getApplication(), propTableModel, "System Property");
		else
			return new ExportTableTask(MainApplication.getApplication(), envTableModel, "System Environment");
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JScrollPane	envScrollPane;
	private javax.swing.JTable		envTable;
	private javax.swing.JButton		exportButton;
	private javax.swing.JPanel		jPanel1;
	private javax.swing.JPanel		jPanel2;
	private javax.swing.JTabbedPane	propEnvTabbedPane;
	private javax.swing.JScrollPane	propScrollPane;
	private javax.swing.JTable		propTable;
	private javax.swing.JPanel		systemEnvPanel;
	private javax.swing.JPanel		systemPropPanel;
	// End of variables declaration//GEN-END:variables
	private BasicTableModel			propTableModel;
	private BasicTableModel			envTableModel;
}
